<?php
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

//namespace SwaggerClient\models;
namespace RC\client\models;

use \ArrayAccess;

class GetExtensionCallLogRecordResponse implements ArrayAccess {
  static $swaggerTypes = array(
      'id' => 'string',
      'uri' => 'string',
      'session_id' => 'string',
      'from' => 'CallLogCallerInfo',
      'to' => 'CallLogCallerInfo',
      'type' => 'string',
      'direction' => 'string',
      'action' => 'string',
      'result' => 'string',
      'duration' => 'int',
      'recording' => 'RecordingInfo'
  );

  static $attributeMap = array(
      'id' => 'id',
      'uri' => 'uri',
      'session_id' => 'sessionId',
      'from' => 'from',
      'to' => 'to',
      'type' => 'type',
      'direction' => 'direction',
      'action' => 'action',
      'result' => 'result',
      'duration' => 'duration',
      'recording' => 'recording'
  );

  
  /**
  * Internal identifier of a cal log record
  * @var string
  */
  public $id;
  /**
  * Canonical URI of a call log record
  * @var string
  */
  public $uri;
  /**
  * Internal identifier of a call session
  * @var string
  */
  public $session_id;
  /**
  * Caller information
  * @var CallLogCallerInfo
  */
  public $from;
  /**
  * Callee information
  * @var CallLogCallerInfo
  */
  public $to;
  /**
  * Call type
  * @var string
  */
  public $type;
  /**
  * Call direction
  * @var string
  */
  public $direction;
  /**
  * Action description of the call operation.
  * @var string
  */
  public $action;
  /**
  * Status description of the call operation.
  * @var string
  */
  public $result;
  /**
  * Call duration in seconds
  * @var int
  */
  public $duration;
  /**
  * Call recording data. Returned if the call is recorded
  * @var RecordingInfo
  */
  public $recording;

  public function __construct(array $data = null) {
    $this->id = $data["id"];
    $this->uri = $data["uri"];
    $this->session_id = $data["session_id"];
    $this->from = $data["from"];
    $this->to = $data["to"];
    $this->type = $data["type"];
    $this->direction = $data["direction"];
    $this->action = $data["action"];
    $this->result = $data["result"];
    $this->duration = $data["duration"];
    $this->recording = $data["recording"];
  }

  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  public function offsetGet($offset) {
    return $this->$offset;
  }

  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  public function offsetUnset($offset) {
    unset($this->$offset);
  }
}
