<?php
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

//namespace SwaggerClient\models;
namespace RC\client\models;

use \ArrayAccess;

class GetPresenceInfo implements ArrayAccess {
  static $swaggerTypes = array(
      'uri' => 'string',
      'allow_see_my_presence' => 'string',
      'dnd_status' => 'string',
      'extension' => 'GetPresenceExtensionInfo',
      'message' => 'string',
      'pick_up_calls_on_hold' => 'string',
      'presence_status' => 'string',
      'ring_on_monitored_call' => 'string',
      'telephony_status' => 'string',
      'user_status' => 'string'
  );

  static $attributeMap = array(
      'uri' => 'uri',
      'allow_see_my_presence' => 'allowSeeMyPresence',
      'dnd_status' => 'dndStatus',
      'extension' => 'extension',
      'message' => 'message',
      'pick_up_calls_on_hold' => 'pickUpCallsOnHold',
      'presence_status' => 'presenceStatus',
      'ring_on_monitored_call' => 'ringOnMonitoredCall',
      'telephony_status' => 'telephonyStatus',
      'user_status' => 'userStatus'
  );

  
  /**
  * Canonical URI of a presence info resource
  * @var string
  */
  public $uri;
  /**
  * If 'True' enables other extensions to see the extension presence status
  * @var string
  */
  public $allow_see_my_presence;
  /**
  * Extended DnD (Do not Disturb) status. Cannot be set for Department/Announcement/Voicemail (Take Messages Only)/Fax User/Shared Lines Group/Paging Only Group/IVR Menu/Application Extension extensions. The 'DoNotAcceptDepartmentCalls' and 'TakeDepartmentCallsOnly' values are applicable only for extensions - members of a Department; if these values are set for department outsiders, the 400 Bad Request error code is returned. The 'TakeDepartmentCallsOnly' status can be set through the old RingCentral user interface and is available for some migrated accounts only.
  * @var string
  */
  public $dnd_status;
  /**
  * Information on extension, for which this presence data is returned
  * @var GetPresenceExtensionInfo
  */
  public $extension;
  /**
  * Custom status message (as previously published by user)
  * @var string
  */
  public $message;
  /**
  * If 'True' enables the extension user to pick up a monitored line on hold
  * @var string
  */
  public $pick_up_calls_on_hold;
  /**
  * Aggregated presence status, calculated from a number of sources
  * @var string
  */
  public $presence_status;
  /**
  * If 'True' enables to ring extension phone, if any user monitored by this extension is ringing
  * @var string
  */
  public $ring_on_monitored_call;
  /**
  * Telephony presence status
  * @var string
  */
  public $telephony_status;
  /**
  * User-defined presence status (as previously published by the user)
  * @var string
  */
  public $user_status;

  public function __construct(array $data = null) {
    $this->uri = $data["uri"];
    $this->allow_see_my_presence = $data["allow_see_my_presence"];
    $this->dnd_status = $data["dnd_status"];
    $this->extension = $data["extension"];
    $this->message = $data["message"];
    $this->pick_up_calls_on_hold = $data["pick_up_calls_on_hold"];
    $this->presence_status = $data["presence_status"];
    $this->ring_on_monitored_call = $data["ring_on_monitored_call"];
    $this->telephony_status = $data["telephony_status"];
    $this->user_status = $data["user_status"];
  }

  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  public function offsetGet($offset) {
    return $this->$offset;
  }

  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  public function offsetUnset($offset) {
    unset($this->$offset);
  }
}
