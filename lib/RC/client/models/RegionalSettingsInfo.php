<?php
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

//namespace SwaggerClient\models;
namespace RC\client\models;

use \ArrayAccess;

class RegionalSettingsInfo implements ArrayAccess {
  static $swaggerTypes = array(
      'home_country' => 'CountryInfo',
      'timezone' => 'TimezoneInfo',
      'language' => 'LanguageInfo',
      'greeting_language' => 'GreetingLanguageInfo',
      'formatting_locale' => 'FormattingLocaleInfo'
  );

  static $attributeMap = array(
      'home_country' => 'homeCountry',
      'timezone' => 'timezone',
      'language' => 'language',
      'greeting_language' => 'greetingLanguage',
      'formatting_locale' => 'formattingLocale'
  );

  
  /**
  * Extension country information
  * @var CountryInfo
  */
  public $home_country;
  /**
  * Extension timezone information
  * @var TimezoneInfo
  */
  public $timezone;
  /**
  * User interface language data
  * @var LanguageInfo
  */
  public $language;
  /**
  * Information on language used for telephony greetings
  * @var GreetingLanguageInfo
  */
  public $greeting_language;
  /**
  * Formatting language preferences for numbers, dates and currencies
  * @var FormattingLocaleInfo
  */
  public $formatting_locale;

  public function __construct(array $data = null) {
    $this->home_country = $data["home_country"];
    $this->timezone = $data["timezone"];
    $this->language = $data["language"];
    $this->greeting_language = $data["greeting_language"];
    $this->formatting_locale = $data["formatting_locale"];
  }

  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  public function offsetGet($offset) {
    return $this->$offset;
  }

  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  public function offsetUnset($offset) {
    unset($this->$offset);
  }
}
